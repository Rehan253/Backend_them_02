version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: as_backend_theme2_prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: ecto://postgres:postgres@db/as_backend_theme2_prod
      SECRET_KEY_BASE: Tj28LDBD4mWSUCxBgjnyODpwyo2rkWCDKi2JgFmQOxF7vN/jUXEQDHsCDSwcrvja
      MIX_ENV: prod
      PHX_HOST: localhost
    command: ["sh", "-c", "mix ecto.create && mix ecto.migrate && mix run priv/repo/seeds.exs && bin/as_backend_theme2", "start"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/users"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ../frontend-timemanager
      dockerfile: Dockerfile
    depends_on:
      web:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
